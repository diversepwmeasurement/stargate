concurrency:
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
  group: ${{ github.workflow }}-${{ github.ref }}
jobs:
  build:
    name: Unit tests
    needs: build-coordinator
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      env:
        ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
      name: Setup Maven
      run: "mkdir -p ~/.m2\ncat <<EOF > ~/.m2/settings.xml\n<settings>\n  <servers>\n\
        \    <server>\n      <id>artifactory-snapshots</id>\n      <username>${ARTIFACTORY_USERNAME}</username>\n\
        \      <password>${ARTIFACTORY_PASSWORD}</password>\n    </server>\n    <server>\n\
        \      <id>artifactory-releases</id>\n      <username>${ARTIFACTORY_USERNAME}</username>\n\
        \      <password>${ARTIFACTORY_PASSWORD}</password>\n   </server>\n </servers>\n\
        </settings>\nEOF\n"
    - continue-on-error: true
      env:
        cache-name: cache-coordinator-snapshots
      id: restore-coordinator-snapshots
      name: Restore Snapshots
      uses: actions/cache@v4
      with:
        key: snapshots-${{ github.sha }}
        path: ~/.m2/repository
    - continue-on-error: true
      name: Build & Test Stargate v2 Quarkus-based APIs
      run: 'cd apis/

        ./mvnw -B -ntp clean test

        '
    timeout-minutes: 15
  build-coordinator:
    name: Coordinator build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '8'
    - continue-on-error: true
      env:
        ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
      name: Setup Maven
      run: "mkdir -p ~/.m2\ncat <<EOF > ~/.m2/settings.xml\n<settings>\n  <servers>\n\
        \    <server>\n      <id>artifactory-snapshots</id>\n      <username>${ARTIFACTORY_USERNAME}</username>\n\
        \      <password>${ARTIFACTORY_PASSWORD}</password>\n    </server>\n    <server>\n\
        \      <id>artifactory-releases</id>\n      <username>${ARTIFACTORY_USERNAME}</username>\n\
        \      <password>${ARTIFACTORY_PASSWORD}</password>\n   </server>\n </servers>\n\
        </settings>\nEOF\n"
    - continue-on-error: true
      env:
        cache-name: cache-coordinator-snapshots
      id: cache-coordinator-snapshots
      name: Cache Snapshots
      uses: actions/cache@v4
      with:
        key: snapshots-${{ github.sha }}
        path: ~/.m2/repository
        restore-keys: 'snapshots-

          '
    - continue-on-error: true
      env:
        cache-name: cache-coordinator-libs
      id: cache-coordinator-libs
      if: steps.cache-coordinator-snapshots.outputs.cache-hit != 'true'
      name: Cache Libs
      uses: actions/cache@v4
      with:
        key: stargate-lib-${{ github.sha }}
        path: ./coordinator/stargate-lib
    - continue-on-error: true
      if: steps.cache-coordinator-snapshots.outputs.cache-hit != 'true'
      name: Build
      run: 'cd coordinator/

        MAVEN_OPTS="-Xmx4g" ./mvnw -B -ntp install -P dse -DskipTests

        '
    timeout-minutes: 10
  build-coordinator-docker:
    name: Docker image
    needs:
    - build-coordinator
    - resolve-coordinator-docker
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      id: cache-docker-image
      name: Cache docker image
      uses: actions/cache@v4
      with:
        key: docker-${{ matrix.image }}-${{ needs.resolve-coordinator-docker.outputs.sha
          }}
        path: ${{ matrix.image }}-${{ needs.resolve-coordinator-docker.outputs.sha
          }}.tar
    - continue-on-error: true
      env:
        cache-name: cache-coordinator-libs
      id: cache-coordinator-libs
      if: steps.cache-docker-image.outputs.cache-hit != 'true'
      name: Restore Libs
      uses: actions/cache@v4
      with:
        key: stargate-lib-${{ github.sha }}
        path: ./coordinator/stargate-lib
    - continue-on-error: true
      if: steps.cache-docker-image.outputs.cache-hit != 'true'
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - continue-on-error: true
      if: steps.cache-docker-image.outputs.cache-hit != 'true'
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - continue-on-error: true
      if: steps.cache-docker-image.outputs.cache-hit != 'true'
      name: Build Docker Image
      run: 'cd coordinator/

        LIBDIR=./tmp-${RANDOM}

        mkdir ${LIBDIR}

        cp ./stargate-lib/*.jar $LIBDIR

        cp ./stargate-lib/logback.xml $LIBDIR

        rm ${LIBDIR}/persistence*.jar

        docker buildx build --target ${{ matrix.image }} --build-arg LIBDIR="$LIBDIR"
        -t stargateio/${{ matrix.image }}:${{ needs.resolve-coordinator-docker.outputs.sha
        }} --load .

        '
    - continue-on-error: true
      if: steps.cache-docker-image.outputs.cache-hit != 'true'
      name: Export Docker Image
      run: 'docker save --output ${{ matrix.image }}-${{ needs.resolve-coordinator-docker.outputs.sha
        }}.tar stargateio/${{ matrix.image }}:${{ needs.resolve-coordinator-docker.outputs.sha
        }}

        '
    strategy:
      matrix:
        image:
        - coordinator-4_0
        - coordinator-3_11
        - coordinator-dse-68
    timeout-minutes: 10
  int-tests:
    name: Integration tests
    needs:
    - resolve-coordinator-docker
    - build-coordinator-docker
    - build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: '17'
    - continue-on-error: true
      env:
        ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
      name: Setup Maven
      run: "mkdir -p ~/.m2\ncat <<EOF > ~/.m2/settings.xml\n<settings>\n  <servers>\n\
        \    <server>\n      <id>artifactory-snapshots</id>\n      <username>${ARTIFACTORY_USERNAME}</username>\n\
        \      <password>${ARTIFACTORY_PASSWORD}</password>\n    </server>\n    <server>\n\
        \      <id>artifactory-releases</id>\n      <username>${ARTIFACTORY_USERNAME}</username>\n\
        \      <password>${ARTIFACTORY_PASSWORD}</password>\n   </server>\n </servers>\n\
        </settings>\nEOF\n"
    - continue-on-error: true
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - continue-on-error: true
      name: Restore docker image
      uses: actions/cache@v4
      with:
        key: ${{ matrix.image-cache-key }}
        path: ${{ matrix.image-file }}
    - continue-on-error: true
      name: Load image
      run: docker load --input ${{ matrix.image-file }}
    - continue-on-error: true
      env:
        cache-name: cache-coordinator-snapshots
      id: restore-coordinator-snapshots
      name: Restore Snapshots
      uses: actions/cache@v4
      with:
        key: snapshots-${{ github.sha }}
        path: ~/.m2/repository
    - continue-on-error: true
      env:
        CONTAINER_TEST: true
      name: Integration Test
      run: 'cd apis/

        ./mvnw -B -ntp verify -DskipUnitTests -pl ${{ matrix.project }} -am -P ${{
        matrix.profile }} -Dquarkus.container-image.build=$CONTAINER_TEST -Dtesting.containers.stargate-image=${{
        matrix.image }}

        '
    strategy:
      fail-fast: false
      matrix:
        include:
        - image: stargateio/coordinator-4_0:${{ needs.resolve-coordinator-docker.outputs.sha
            }}
          image-cache-key: docker-coordinator-4_0-${{ needs.resolve-coordinator-docker.outputs.sha
            }}
          image-file: coordinator-4_0-${{ needs.resolve-coordinator-docker.outputs.sha
            }}.tar
          name: cassandra-40
          profile: cassandra-40
          repository-login: false
        - image: stargateio/coordinator-3_11:${{ needs.resolve-coordinator-docker.outputs.sha
            }}
          image-artifact: img-coordinator-3_11-${{ github.sha }}
          image-cache-key: docker-coordinator-3_11-${{ needs.resolve-coordinator-docker.outputs.sha
            }}
          image-file: coordinator-3_11-${{ needs.resolve-coordinator-docker.outputs.sha
            }}.tar
          name: cassandra-311
          profile: cassandra-311
          repository-login: false
        - image: stargateio/coordinator-dse-68:${{ needs.resolve-coordinator-docker.outputs.sha
            }}
          image-cache-key: docker-coordinator-dse-68-${{ needs.resolve-coordinator-docker.outputs.sha
            }}
          image-file: coordinator-dse-68-${{ needs.resolve-coordinator-docker.outputs.sha
            }}.tar
          name: dse-68
          profile: dse-68
          repository-login: false
        name:
        - cassandra-40
        - cassandra-311
        - dse-68
        project:
        - sgv2-docsapi
        - sgv2-graphqlapi
        - sgv2-restapi
    timeout-minutes: 45
  resolve-coordinator-docker:
    name: Resolve coordinator docker SHA
    outputs:
      sha: ${{ steps.resolve.outputs.sha }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      id: resolve
      name: Resolve SHA
      run: 'SHA=$(git log -n 1 --pretty=format:"%h" -- coordinator/)

        echo "Resolved commit SHA for coordinator docker image to $SHA"

        echo "sha=${SHA}" >> $GITHUB_OUTPUT

        '
name: Stargate APIs V2
on:
  repository_dispatch:
    types: trigger-ga___apis-v2.yaml
