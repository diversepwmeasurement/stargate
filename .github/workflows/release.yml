env:
  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
  MAVEN_OPTS: -Xmx4g
jobs:
  build:
    name: Build
    needs: create-release
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: '8'
    - continue-on-error: true
      name: Setup Maven
      run: "mkdir -p ~/.m2\ncat <<EOF > ~/.m2/settings.xml\n<settings>\n  <servers>\n\
        \    <server>\n      <id>artifactory-snapshots</id>\n      <username>${ARTIFACTORY_USERNAME}</username>\n\
        \      <password>${ARTIFACTORY_PASSWORD}</password>\n    </server>\n    <server>\n\
        \      <id>artifactory-releases</id>\n      <username>${ARTIFACTORY_USERNAME}</username>\n\
        \      <password>${ARTIFACTORY_PASSWORD}</password>\n   </server>\n </servers>\n\
        </settings>\nEOF\n"
    - continue-on-error: true
      name: Build with Maven
      run: 'cd coordinator/

        mvn -B -ntp versions:set -DremoveSnapshot versions:commit

        mvn -P dse -B -ntp -q -ff clean package -DskipTests

        '
    - continue-on-error: true
      name: Zip-up `stargate-lib`
      run: 'cd coordinator/

        zip stargate-jars.zip starctl stargate-lib/logback.xml stargate-lib/*.jar

        '
    - continue-on-error: true
      name: Upload jars
      uses: shogo82148/actions-upload-release-asset@v1
      with:
        asset_name: stargate-jars.zip
        asset_path: coordinator/stargate-jars.zip
        github_token: ${{ secrets.GITHUB_TOKEN }}
        upload_url: ${{needs.create-release.outputs.release-upload-url}}
  create-release:
    name: Create release
    outputs:
      release-tag: ${{ steps.resolve_tag.outputs.tag }}
      release-upload-url: ${{ steps.create_release.outputs.upload_url }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      id: vars
      name: Set reference
      run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
    - continue-on-error: true
      id: resolve_tag
      name: Resolve tag
      run: 'TAG=${{ inputs.tag != null && inputs.tag || steps.vars.outputs.tag }}

        echo "Resolved tag for the release $TAG"

        echo "tag=${TAG}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: create_release
      name: Create release
      uses: softprops/action-gh-release@v2
      with:
        draft: false
        name: Release ${{ steps.resolve_tag.outputs.tag }}
        prerelease: false
        tag_name: ${{ steps.resolve_tag.outputs.tag }}
        token: ${{ secrets.GITHUB_TOKEN }}
  dispatch:
    continue-on-error: true
    if: ${{ always() }}
    name: Dispatch release event
    needs:
    - create-release
    - build
    - publish
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Repository dispatch
      uses: peter-evans/repository-dispatch@v3
      with:
        client-payload: '{"version": "${{ needs.create-release.outputs.release-tag
          }}"}'
        event-type: stargate-v1-release
        repository: ${{ matrix.repo }}
        token: ${{ secrets[matrix.secret] }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - repo: stargate/stargate
          secret: SG_EVENTS_PAT
        - repo: stargate/docker-images
          secret: SG_EVENTS_PAT
        - repo: riptano/c2
          secret: STARGATE_GH_RELEASE
        - repo: riptano/dse-astra-auth-lib
          secret: STARGATE_GH_RELEASE
        repo:
        - stargate/stargate
        - stargate/docker-images
        - riptano/c2
        - riptano/dse-astra-auth-lib
  publish:
    name: Publish to OSSRH
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: '8'
    - continue-on-error: true
      env:
        OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      name: Setup Maven
      run: "mkdir -p ~/.m2\ncat <<EOF > ~/.m2/settings.xml\n<settings>\n  <servers>\n\
        \    <server>\n      <id>ossrh</id>\n      <username>${OSSRH_USERNAME}</username>\n\
        \      <password>${OSSRH_TOKEN}</password>\n    </server>\n    <server>\n\
        \      <id>artifactory-snapshots</id>\n      <username>${ARTIFACTORY_USERNAME}</username>\n\
        \      <password>${ARTIFACTORY_PASSWORD}</password>\n    </server>\n    <server>\n\
        \      <id>artifactory-releases</id>\n      <username>${ARTIFACTORY_USERNAME}</username>\n\
        \      <password>${ARTIFACTORY_PASSWORD}</password>\n   </server>\n </servers>\n\
        </settings>\nEOF\n"
    - continue-on-error: true
      name: Install gpg secret key
      run: 'cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import

        '
    - continue-on-error: true
      if: ${{ !inputs.skipPublish }}
      name: Publish package
      run: 'cd coordinator/

        ./mvnw -B -ntp versions:set -DremoveSnapshot versions:commit

        ./mvnw -B -ntp -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD
        }} clean deploy -DskipTests -P deploy,dse

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Generate changelog
      run: ./update_changelog.sh
    - continue-on-error: true
      name: Bump versions
      run: 'cd coordinator/

        ./mvnw -B -ntp release:update-versions -DautoVersionSubmodules=true versions:commit
        -Pdse

        ./mvnw -B -ntp xml-format:xml-format fmt:format -Pdse

        '
    - continue-on-error: true
      if: success()
      name: Rev Version
      uses: peter-evans/create-pull-request@v6
      with:
        base: v1
        branch-suffix: short-commit-hash
        commit-message: Bumping version for next release
        title: Bumping version for next release
        token: ${{ secrets.GITHUB_TOKEN }}
name: Release
on:
  repository_dispatch:
    types: trigger-ga___release.yml
